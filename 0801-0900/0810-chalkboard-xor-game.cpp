class Solution {
public:
    bool xorGame(vector<int>& nums) {
        // 奇偶性
        // 必胜态
        // 1. 假如还没擦出数字的时候, 异或结果为0, 则该玩家胜利
        // 2. 假如异或结果不为0, 擦除其中一个结果, 对手不处于必胜态, 同时后手擦出一个数字后, 后手必输
        /*
            假如n个数的序列S = s[0] ^ s[1] ^ s[2] ^ ... ^ s[n-1]
            记S_i为擦除s[i]后的异或结果
            有: S_i ^ s[i] = S => s[i] = S ^ S_i
            有: S = (n个S异或) ^ S_0 ^ S_1 ^ S_2 ^ ... ^ S_{n-1}
            
            必输状态: 无论擦出什么数字, 都一定输
            有: S_0 ^ S_1 ^ S_2 ^ ... ^ S_{n-1} = 0

            假如n是奇数, 必输
            假如n是偶数, 必赢
         */
         int v = 0;
         for (int x : nums) v ^= x;
         return v == 0 || nums.size() % 2 == 0;
    }
};
